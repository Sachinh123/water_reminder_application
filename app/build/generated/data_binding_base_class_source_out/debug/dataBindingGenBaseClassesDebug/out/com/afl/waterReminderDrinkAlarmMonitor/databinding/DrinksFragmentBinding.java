// Generated by data binding compiler. Do not edit!
package com.afl.waterReminderDrinkAlarmMonitor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.afl.waterReminderDrinkAlarmMonitor.R;
import com.afl.waterReminderDrinkAlarmMonitor.ui.dashboard.DashboardViewModel;
import com.google.android.gms.ads.AdView;
import com.google.android.material.button.MaterialButton;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DrinksFragmentBinding extends ViewDataBinding {
  @NonNull
  public final AdView adView;

  @NonNull
  public final LinearLayout amountContainer;

  @NonNull
  public final TextView amountText;

  @NonNull
  public final ToggleButton beerButton;

  @NonNull
  public final ToggleButton coffeeButton;

  @NonNull
  public final MaterialButton drinkButton;

  @NonNull
  public final ToggleButton energyButton;

  @NonNull
  public final LinearLayout firstRowDrinkContainer;

  @NonNull
  public final Guideline guidelineDrinkFragment;

  @NonNull
  public final ToggleButton juiceButton;

  @NonNull
  public final ToggleButton lemonadeButton;

  @NonNull
  public final TextView metricText;

  @NonNull
  public final ToggleButton milkButton;

  @NonNull
  public final ToggleButton milkshakeButton;

  @NonNull
  public final MaterialButton minusButton;

  @NonNull
  public final MaterialButton plusButton;

  @NonNull
  public final LinearLayout secondRowDrinkContainer;

  @NonNull
  public final TextView selectDrinkText;

  @NonNull
  public final ToggleButton sodaButton;

  @NonNull
  public final ToggleButton teaButton;

  @NonNull
  public final LinearLayout thirdRowDrinkContainer;

  @NonNull
  public final ToggleButton waterButton;

  @NonNull
  public final ToggleButton wineButton;

  @NonNull
  public final ToggleButton yogurtButton;

  @Bindable
  protected DashboardViewModel mDashboardViewModel;

  protected DrinksFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AdView adView, LinearLayout amountContainer, TextView amountText, ToggleButton beerButton,
      ToggleButton coffeeButton, MaterialButton drinkButton, ToggleButton energyButton,
      LinearLayout firstRowDrinkContainer, Guideline guidelineDrinkFragment,
      ToggleButton juiceButton, ToggleButton lemonadeButton, TextView metricText,
      ToggleButton milkButton, ToggleButton milkshakeButton, MaterialButton minusButton,
      MaterialButton plusButton, LinearLayout secondRowDrinkContainer, TextView selectDrinkText,
      ToggleButton sodaButton, ToggleButton teaButton, LinearLayout thirdRowDrinkContainer,
      ToggleButton waterButton, ToggleButton wineButton, ToggleButton yogurtButton) {
    super(_bindingComponent, _root, _localFieldCount);
    this.adView = adView;
    this.amountContainer = amountContainer;
    this.amountText = amountText;
    this.beerButton = beerButton;
    this.coffeeButton = coffeeButton;
    this.drinkButton = drinkButton;
    this.energyButton = energyButton;
    this.firstRowDrinkContainer = firstRowDrinkContainer;
    this.guidelineDrinkFragment = guidelineDrinkFragment;
    this.juiceButton = juiceButton;
    this.lemonadeButton = lemonadeButton;
    this.metricText = metricText;
    this.milkButton = milkButton;
    this.milkshakeButton = milkshakeButton;
    this.minusButton = minusButton;
    this.plusButton = plusButton;
    this.secondRowDrinkContainer = secondRowDrinkContainer;
    this.selectDrinkText = selectDrinkText;
    this.sodaButton = sodaButton;
    this.teaButton = teaButton;
    this.thirdRowDrinkContainer = thirdRowDrinkContainer;
    this.waterButton = waterButton;
    this.wineButton = wineButton;
    this.yogurtButton = yogurtButton;
  }

  public abstract void setDashboardViewModel(@Nullable DashboardViewModel dashboardViewModel);

  @Nullable
  public DashboardViewModel getDashboardViewModel() {
    return mDashboardViewModel;
  }

  @NonNull
  public static DrinksFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.drinks_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DrinksFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DrinksFragmentBinding>inflateInternal(inflater, R.layout.drinks_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static DrinksFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.drinks_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DrinksFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DrinksFragmentBinding>inflateInternal(inflater, R.layout.drinks_fragment, null, false, component);
  }

  public static DrinksFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DrinksFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (DrinksFragmentBinding)bind(component, view, R.layout.drinks_fragment);
  }
}
