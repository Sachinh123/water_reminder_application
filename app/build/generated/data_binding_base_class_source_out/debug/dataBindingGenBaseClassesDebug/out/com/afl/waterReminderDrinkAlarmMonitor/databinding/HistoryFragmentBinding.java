// Generated by data binding compiler. Do not edit!
package com.afl.waterReminderDrinkAlarmMonitor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.afl.waterReminderDrinkAlarmMonitor.R;
import com.afl.waterReminderDrinkAlarmMonitor.ui.history.HistoryViewModel;
import com.github.mikephil.charting.charts.LineChart;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class HistoryFragmentBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final RecyclerView drinkRecycleView;

  @NonNull
  public final LineChart drunkChart;

  @NonNull
  public final ScrollView drunkFullListContainer;

  @NonNull
  public final AutoCompleteTextView filledExposedDropdown;

  @NonNull
  public final TextInputLayout monthDropdown;

  @Bindable
  protected HistoryViewModel mHistoryViewModel;

  protected HistoryFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout constraintLayout, RecyclerView drinkRecycleView, LineChart drunkChart,
      ScrollView drunkFullListContainer, AutoCompleteTextView filledExposedDropdown,
      TextInputLayout monthDropdown) {
    super(_bindingComponent, _root, _localFieldCount);
    this.constraintLayout = constraintLayout;
    this.drinkRecycleView = drinkRecycleView;
    this.drunkChart = drunkChart;
    this.drunkFullListContainer = drunkFullListContainer;
    this.filledExposedDropdown = filledExposedDropdown;
    this.monthDropdown = monthDropdown;
  }

  public abstract void setHistoryViewModel(@Nullable HistoryViewModel historyViewModel);

  @Nullable
  public HistoryViewModel getHistoryViewModel() {
    return mHistoryViewModel;
  }

  @NonNull
  public static HistoryFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.history_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static HistoryFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<HistoryFragmentBinding>inflateInternal(inflater, R.layout.history_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static HistoryFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.history_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static HistoryFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<HistoryFragmentBinding>inflateInternal(inflater, R.layout.history_fragment, null, false, component);
  }

  public static HistoryFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static HistoryFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (HistoryFragmentBinding)bind(component, view, R.layout.history_fragment);
  }
}
